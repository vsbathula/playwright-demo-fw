npm init playwright@latest
npx playwright install
Playwright Test for VSCode
ESLint
Playwright Snippets 2024 
https://marketplace.visualstudio.com/items?itemName=sumanthtps.playwright-test-code-snippets

mkdir -p src/tests
mkdir -p src/pages
mkdir -p src/utils
mkdir -p src/config
mkdir -p src/reporting
mkdir -p src/logging
mkdir -p src/data

sinppets: configure snippets

{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},
	"JS function body": {
		"scope": "javascript,typescript",
		"prefix": "jsf",
		"body": [
			"function ${1:func_name}(${2:params}) {",
			"\t${3:body}",
			"}"
		],
		"description": "Create js function body"
	},
	"TypeScript Class with Constructor": {
		"prefix": "tspc",
		"body": [
			"import { Page, expect } from \"@playwright/test\";",
			"import Logger from \"../utils/LoggerUtil\";",
			"",
			"export default class ${1:ClassName} {",
			"\tprivate readonly $3 = \"\";",
			"private logger = new Logger();",
			"",
			"\tconstructor(private page: Page) {",
			"\t\t$2",
			"\t}",
			"}"
		],
		"description": "Creates a TypeScript class with a constructor"
	},
	"TypeScript async function": {
		"prefix": "tspf",
		"body": [
			"async ${1:func_name}(${2:params}) {",
			"\tawait this.page.${3:body};",
			"}"
		],
		"description": "Creates a TypeScript class with a constructor"
	},
	"TypeScript test function": {
		"prefix": "tstf",
		"body": [
			"import { test } from \"@playwright/test\";",
			"",
			"test(\"${1:test_desc}\", async({ page }) => {",
			"\t",
			"});"
		],
		"description": "Creates a TypeScript class with a constructor"
	}
}